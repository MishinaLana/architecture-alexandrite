#АНАЛИЗ СИСТЕМЫ

Проблемные места:
- MES: Медленная загрузка дашборда заказов
- Расчет стоимости заказа: Длительная обработка из-за сложности 3D-моделей
- Интеграция через RabbitMQ: Высокая нагрузка на CRM и MES при росте числа заказов

Данные для кэширования:
- Списки заказов с фильтрами (статусы, пагинация)
- Результаты расчета стоимости заказа (для повторного запроса)
- Статические данные (каталог изделий в магазине)


#МОТИВАЦИЯ

Проблемы, которые решает кэширование:
- Ускорение отклика MES для операторов с дашбордом заказов
- Снижение нагрузки на БД MES и CRM
- Улучшение пользовательский опыт за счет уменьшения времени на расчет стоимости

Элементы системы для кэширования:
- MES db - cписков заказов
- MES API - запросы результатов расчета стоимости
- Shop API - запросы каталога


#ПРЕДЛАГАЕМОЕ РЕШЕНИЕ

Тип кеширования: Серверное
Клиентское кэширование не подходит для динамических данных, таких как статусы заказов.
Серверное кэширование централизованно управляет актуальностью данных.

Паттерн: Cache-Aside
- Данные загружаются в кэш только при запросе
- Не требует сложной интеграции с БД

Write-Through усложняет систему (кэш должен обновлять БД)
Refresh-Ahead избыточен (данные меняются нерегулярно)

Диграммы последовательности:

[Чтение списка заказов](https://www.planttext.com?text=bLB1IiD04Bqlx3yCFUcXUFSWLVJWGHJzWcqIC12R9Ldl9b8Gr9lWhHwz1d6nbDR-mimVERF6AZK8NdQ7dVVclJV9e7IcS9SNcLOkTLa2-4mrUbpW53rGXKkSyZd31l0D6oduViSNsA0AS4RtTCE8AtdYLg3XV5ChhKpayWAERL8OAKm9kTNAibmQfTQC7FIE3ivWz-Im9qrZqxNkQHAdPUX59ZfFEhZxUw4T3qKljz3VaJ7RW8_iPIcksEGV8TYaJOKL19Ztr2RnV0VuPy16gu20_ahX8QHTq2twBPnGJHLTXxDckkmENxyGD6QTpFtWq1Yuy5G3BxBLy5e1j7RYuNyo0EExdNL0rm874PbCTzzUj4f6CK2x7KRdbg6J44rCovTVfSCvJd_f37W0_rGV)

[Изменение статуса](https://www.planttext.com?text=ZL8zJiCm5Duj-GvFtNk13gWWEZ0W49p0YIrXgJHMOdRI7g0h4mnS85GDZVe3LtZlHZnxYDeKK8SdM_f-_JCilChzq-DO2c_zs02-u0gtMECkJeCrK4bJh6XACogn0iOhNFFmAeKKAlLP3ZVEv2fiL06PayAnhKsjKnCFlUlHFPpVNlK2g9pz1RsyYA1EEjYTqRQ8KAhI1nFoCWVzis0p07p53oxvXGlS_56N-paR13evYTyvdawWtwQziNB9v0NMz8oVk6mz6EWOqxnDZirP_iw2QYyu9dqpjSH6YiWwAOnc-qPj42ipzt_Bvl1jQNvqMKCpqVmRVW00)



#СТРАТЕГИЯ ИНВАЛИДАЦИИ КЭША

Стратегия: Комбинированная (временная инвалидация + инвалидация по событиям)

Временная инвалидация (TTL):
Для списков заказов: TTL = 1-5 минут (баланс между актуальностью и нагрузкой)
Для расчета стоимости: TTL = 60 минут (данные статичны после расчета)

Инвалидация по событиям:
При изменении статуса заказа удаляются все ключи, связанные с списками заказов

Почему другие стратегии не подходят:
Только TTL: Данные могут устареть раньше, чем истечет TTL (например, изменение статуса)
Только инвалидация по ключу: Сложно отследить все ключи, затрагиваемые изменением (например, фильтры заказов)

Сравнительный анализ:
1. TTL
+ Простота реализации
- Данные могут быть неактуальными

2. Инвалидация по ключу
+ Точечное обновление
- Сложность управления ключами

3. Комбинированная
+ Баланс актуальности и производительности
- Требует дополнительной логики
